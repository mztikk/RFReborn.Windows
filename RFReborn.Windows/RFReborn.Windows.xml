<?xml version="1.0"?>
<doc>
    <assembly>
        <name>RFReborn.Windows</name>
    </assembly>
    <members>
        <member name="T:RFReborn.Windows.Extensions.ProcessExtensions">
            <summary>
            Extends <see cref="T:System.Diagnostics.Process"/>
            </summary>
        </member>
        <member name="M:RFReborn.Windows.Extensions.ProcessExtensions.GetCommandLine(System.Diagnostics.Process)">
            <summary>
            Gets all commandline arguments a process was started with.
            </summary>
            <param name="proc">Process to get arguments from.</param>
            <returns>String of the commandline arguments if successfull, <see cref="F:System.String.Empty"/> otherwise.</returns>
        </member>
        <member name="T:RFReborn.Windows.Native.User32">
            <summary>
            Methods from the User32.dll
            </summary>
        </member>
        <member name="M:RFReborn.Windows.Native.User32.SendMessage(System.IntPtr,System.Int32,System.UInt32,System.UInt32)">
            <summary>
                Sends the specified message to a window or windows. The SendMessage function calls the window procedure for the
                specified window and does not return until the window procedure has processed the message.
                To send a message and return immediately, use the SendMessageCallback or SendNotifyMessage function.To post a
                message to a thread's message queue and return immediately, use the PostMessage or PostThreadMessage function.
            </summary>
            <param name="hWnd">
                A handle to the window whose window procedure will receive the message. If this parameter is HWND_BROADCAST
                ((HWND)0xffff), the message is sent to all top-level windows in the system, including disabled or invisible unowned
                windows, overlapped windows, and pop-up windows; but the message is not sent to child windows.
                Message sending is subject to UIPI.
                The thread of a process can send messages only to message queues of threads in
                processes of lesser or equal integrity level.
            </param>
            <param name="uMsg">
                The message to be sent.
            </param>
            <param name="wParam">
                Additional message-specific information.
            </param>
            <param name="lParam">
                Additional message-specific information.
            </param>
            <returns>
                The return value specifies the result of the message processing; it depends on the message sent.
            </returns>
        </member>
        <member name="M:RFReborn.Windows.Native.User32.VkKeyScan(System.Char)">
            <summary>
                Translates a character to the corresponding virtual-key code and shift state for the current keyboard.
            </summary>
            <param name="ch">
                The character to be translated into a virtual-key code.
            </param>
            <returns>
                If the function succeeds, the low-order byte of the return value contains the virtual-key code and the high-order
                byte contains the shift state, which can be a combination of the following flag bits.
            </returns>
        </member>
    </members>
</doc>
